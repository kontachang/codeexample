package common;

public class Result<T> {
    protected T model;
    protected int code;
    protected String message;
    protected Boolean successed;

    public Result(T model) {
        this.code = 0;
        this.message = "";
        this.model = model;
    }

    public Result(int code, String message) {
        this.model = null;
        this.code = code;
        this.message = message;
    }

    public Result(int code, String message, Boolean businessOK) {
        this.model = null;
        this.code = code;
        this.message = message;
        this.successed = businessOK;
    }

    public Result(int code) {
        this(code, "failed");
    }

    public static <T> Result<T> error(int code, String message) {
        return new Result(code, message);
    }

    public static <T> Result<T> error(String message) {
        return error(-1, message);
    }

    public static <T> Result<T> normal(T object) {
        return new Result(object);
    }

    public static <T> Result<T> normal() {
        return new Result((Object) null);
    }

    public static <T> Result<T> success(T object) {
        Result<T> result = new Result(object);
        result.code = 0;
        result.message = "successed";
        return result;
    }

    public boolean isSuccessed() {
        return this.code >= 0 || this.successed == Boolean.TRUE;
    }

    public boolean isFailed() {
        return !this.isSuccessed();
    }

    public T getModel() {
        return this.model;
    }

    public int getCode() {
        return this.code;
    }

    public String getMessage() {
        return this.message;
    }

}
